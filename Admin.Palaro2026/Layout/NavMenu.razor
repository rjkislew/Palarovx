@inject NavigationManager NavManager

<MudNavMenu Margin="Margin.Normal" Rounded Color="Color.Dark" Class="scroll-container">
    <!-- Home Link -->
    <MudNavLink Match="NavLinkMatch.All" Href="./">Home</MudNavLink>

    <!-- Events Group -->
    <MudNavGroup Title="Event" Expanded="@IsExpanded("/events")">
        <MudNavLink Match="NavLinkMatch.All" Href="./events/">Events</MudNavLink>
        <MudNavLink Match="NavLinkMatch.All" Href="./events/streams">Streams</MudNavLink>
        <MudNavLink Match="NavLinkMatch.All" Href="./events/venues">Venues</MudNavLink>
    </MudNavGroup>

    <!-- News Group -->
    <MudNavGroup Title="News" Expanded="@IsExpanded("/news")">
        <MudNavLink Match="NavLinkMatch.All" Href="./news" >News</MudNavLink>
        <MudNavLink Match="NavLinkMatch.All" Href="./news/categories">Categories</MudNavLink>
    </MudNavGroup>

    <!-- Profile Group -->
    <MudNavGroup Title="Profile" Expanded="@IsExpanded("/profiles")">
        <MudNavLink Match="NavLinkMatch.All" Href="./profiles/players">Players</MudNavLink>
        <MudNavLink Match="NavLinkMatch.All" Href="./profiles/coaches">Coaches</MudNavLink>
    </MudNavGroup>

    <!-- Schools Group -->
    <MudNavGroup Title="School" Expanded="@IsExpanded("/schools")">
        <MudNavLink Match="NavLinkMatch.All" Href="./schools/regions">Regions</MudNavLink>
        <MudNavLink Match="NavLinkMatch.All" Href="./schools/divisions">Divisions</MudNavLink>
        <MudNavLink Match="NavLinkMatch.All" Href="./schools">Schools</MudNavLink>
        <MudNavLink Match="NavLinkMatch.All" Href="./schools/billeting-quarters">Billeting Quarters</MudNavLink>
    </MudNavGroup>

    <!-- Sport Group -->
    <MudNavGroup Title="Sport" Expanded="@IsExpanded("/sports")">
        <MudNavLink Match="NavLinkMatch.All" Href="./sports">Sports</MudNavLink>
        <MudNavLink Match="NavLinkMatch.All" Href="./sports/subcategories">Subcategories</MudNavLink>
    </MudNavGroup>

    <!-- Users -->
    <MudNavLink Match="NavLinkMatch.All" Href="./users">Users</MudNavLink>
</MudNavMenu>

@code {
    private string currentPath = string.Empty;

    protected override void OnInitialized()
    {
        UpdateCurrentPath();
        NavManager.LocationChanged += HandleLocationChanged;
    }

    private void HandleLocationChanged(object? sender, Microsoft.AspNetCore.Components.Routing.LocationChangedEventArgs e)
    {
        UpdateCurrentPath();
        InvokeAsync(StateHasChanged);
    }

    private void UpdateCurrentPath()
    {
        currentPath = NavManager.Uri.Replace(NavManager.BaseUri, "").TrimEnd('/');
    }

    private bool IsExpanded(string pathPrefix)
    {
        return currentPath.StartsWith(pathPrefix.TrimStart('/'), StringComparison.OrdinalIgnoreCase);
    }

    public void Dispose()
    {
        NavManager.LocationChanged -= HandleLocationChanged;
    }
}
