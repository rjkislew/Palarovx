@inherits LayoutComponentBase

<!--
    MainLayout.razor
    This is the main layout for the Blazor application.
    It includes the app bar, drawer, and main content area.
    The layout is responsive and adapts to different screen sizes.
-->
@inject IJSRuntime JSRuntime
@inject ISnackbar Snackbar
@inject IDialogService dialogService
@inject HttpClient httpClient
@inject ThemeService themeService
@inject APIService apiService
@inject CookieService cookieService

@* Required *@
<MudThemeProvider @ref="_mudThemeProvider" Theme="PalaroTheme" DefaultScrollbar="true" IsDarkMode="@(themeService.IsDarkMode ?? false)" />
<MudPopoverProvider />

@* Needed for dialogs *@
<MudDialogProvider />

@* Needed for snackbars *@
<MudSnackbarProvider />


<MudLayout>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="pt-5">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code
{
    // null = Auto, true = Night, false = Light
    private bool? _isDarkMode = null;

    bool isAPIAvailable;

    // ThemeService: handles theme management
    private MudThemeProvider? _mudThemeProvider;

    // initialization: sets the theme and subscribes to theme changes
    protected override async Task OnInitializedAsync()
    {
        // initialize the theme service
        themeService.OnThemeChanged += StateHasChanged;
        await themeService.LoadThemePreference();
    }


    // dark mode toggle: switches between dark and light mode
    private async Task ToggleDarkMode()
    {
        await themeService.ToggleDarkModeAsync();
    }

    // theme icon: returns the appropriate icon based on the current theme
    private string GetThemeIcon()
    {
        // if the user has not selected a theme, return the auto mode icon
        if (!themeService.UserSelectedTheme)
            return Icons.Material.Filled.AutoMode;

        // if the user has selected a theme, return the appropriate icon
        return themeService.IsDarkMode switch
        {
            true => Icons.Material.Filled.DarkMode, // dark mode icon
            false => Icons.Material.Filled.LightMode, // light mode icon
            _ => Icons.Material.Filled.Help // fallback if something goes wrong
        };
    }

    // theme tooltip: returns the appropriate tooltip based on the current theme
    private string GetThemeTooltip()
    {
        if (!themeService.UserSelectedTheme)
            return "System Theme";

        return themeService.IsDarkMode switch
        {
            true => "Dark Mode",
            false => "Light Mode",
            _ => "Unknown Theme"
        };
    }


    // drawer open state: controls the visibility of the drawer
    private bool _DrawerOpen = true;

    // method to toggle the drawer open state
    private void ToggleDrawer()
    {
        _DrawerOpen = !_DrawerOpen;
    }


    // Palaro theme: defines the theme for the application
    private MudTheme PalaroTheme = new MudTheme()
        {
            PaletteLight = new PaletteLight()
            {
                Dark = Colors.Gray.Darken4,
                White = Colors.Gray.Lighten5,
                Primary = "1e4ca1",
                Secondary = "ebb94d",
                Tertiary = "ba3535",
                ActionDefault = Colors.Gray.Darken4,
                AppbarBackground = Colors.Shades.White,
                AppbarText = Colors.Shades.Black,
                TextPrimary = Colors.Shades.Black,
            },
            PaletteDark = new PaletteDark()
            {
                Dark = Colors.Gray.Lighten5,
                White = Colors.Gray.Darken4,
                Primary = "4a7ad3",
                Secondary = "f8d589",
                Tertiary = "db5a5a",
                Background = Colors.Gray.Darken4,
                Surface = Colors.Gray.Darken4,
                DrawerBackground = Colors.Gray.Darken4,
                ActionDefault = Colors.Gray.Lighten5,
                AppbarBackground = Colors.Gray.Darken4,
                AppbarText = Colors.Gray.Lighten5,
                TextPrimary = Colors.Shades.White
            },
            LayoutProperties = new LayoutProperties()
            {
                DrawerWidthLeft = "280px"
            },
            Typography = new Typography()
            {
                Default = new DefaultTypography()
                {
                    FontFamily = new[] { "Inter", "sans-serif" },
                },
                H1 = new H1Typography()
                {
                    FontSize = "clamp(2rem, 5vw + 1rem, 4rem)",
                    FontWeight = "700"
                },
                H2 = new H2Typography()
                {
                    FontSize = "clamp(1.75rem, 4vw + 0.5rem, 3rem)",
                    FontWeight = "600"
                },
                H3 = new H3Typography()
                {
                    FontSize = "clamp(1.5rem, 3vw + 0.5rem, 2.5rem)",
                    FontWeight = "600"
                },
                H4 = new H4Typography()
                {
                    FontSize = "clamp(1.25rem, 2.5vw + 0.5rem, 2rem)",
                    FontWeight = "600"
                },
                H5 = new H5Typography()
                {
                    FontSize = "clamp(1rem, 2vw + 0.5rem, 1.5rem)",
                    FontWeight = "600"
                },
                H6 = new H6Typography()
                {
                    FontSize = "clamp(0.875rem, 1.5vw + 0.5rem, 1.25rem)",
                    FontWeight = "700"
                },
                Subtitle1 = new Subtitle1Typography()
                {
                    FontSize = "clamp(1rem, 1.5vw + 0.25rem, 1.25rem)",
                    FontWeight = "400"
                },
                Subtitle2 = new Subtitle2Typography()
                {
                    FontSize = "clamp(0.875rem, 1.2vw + 0.25rem, 1rem)",
                    FontWeight = "500"
                },
                Body1 = new Body1Typography()
                {
                    FontSize = "clamp(1rem, 1.2vw + 0.25rem, 1.125rem)",
                    FontWeight = "400",
                },
                Body2 = new Body2Typography()
                {
                    FontSize = "clamp(0.875rem, 1vw + 0.25rem, 1rem)",
                    FontWeight = "400",
                },
                Button = new ButtonTypography()
                {
                    FontSize = "clamp(0.875rem, 0.8vw + 0.25rem, 1rem)",
                    FontWeight = "700",
                    TextTransform = "none"
                },
                Caption = new CaptionTypography()
                {
                    FontSize = "clamp(0.75rem, 0.8vw + 0.25rem, 0.875rem)",
                    FontWeight = "300"
                },
                Overline = new OverlineTypography()
                {
                    FontSize = "clamp(0.625rem, 0.5vw + 0.25rem, 0.75rem)",
                    FontWeight = "500",
                    TextTransform = "uppercase",
                    LetterSpacing = "0.1em"
                }
            }
        };
}