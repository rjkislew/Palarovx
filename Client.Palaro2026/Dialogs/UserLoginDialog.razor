@using System.Net.Http
@using System.Text.Json
@using System.Threading.Tasks
@using System.Text
@using Blazored.LocalStorage
@inject HttpClient httpClient
@inject IJSRuntime JS
@inject ISnackbar Snackbar
@inject CookieService CookieService
@inject ColorService ColorService
@inject ILocalStorageService LocalStorageService
@inject AuthenticationService authenticationService

<MudDialog Style="width: 300px">
    <DialogContent>
        <MudStack AlignItems="AlignItems.Center" Spacing="0">
            <MudImage Src="Media/Logo/Flat-Logo-with-2026.png" Height="100" Width="100" />
            <MudForm>
                <MudTextField Style="@($"border-color: {ColorService.SelectedColor}")"
                              T="string" FullWidth Label="Username" Margin="Margin.Dense"
                              Variant="Variant.Outlined" @bind-Value="username" autocomplete="username"></MudTextField>
                <MudTextField Style="@($"border-color: {ColorService.SelectedColor}")"
                              T="string" FullWidth Label="Password" Margin="Margin.Dense"
                              Variant="Variant.Outlined" @bind-Value="password" InputType="InputType.Password" autocomplete="current-password"></MudTextField>
            </MudForm>
        </MudStack>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="LoginUser ">Login</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private MudDialogInstance? MudDialog { get; set; }
    private readonly string API_URL = APIService.Palaro2026API;
    private UsersContent? userID;

    private string? username;
    private string? password;

    private void Cancel() => MudDialog?.Cancel();

    public class UsersContent
    {
        public string? ID { get; set; }
        public string? Username { get; set; }
        public string? PasswordHash { get; set; }
    }

    private async Task LoginUser()
    {
        var loginResponse = await authenticationService.Login(username, password);

        try
        {
            if (loginResponse != null)
            {
                MudDialog?.Close(DialogResult.Ok(true));
                Snackbar.Add("Logged-in Successfully", Severity.Success);
            }
            else
            {
                Snackbar.Add("Login failed: Invalid credentials", Severity.Error);
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Unexpected error: {ex.Message}", Severity.Error);
        }
    }
}