@page "/regional-teams/{Abbreviation}-{Region}/players"

@using System.Net.Http
@using System.Text.Json
@using System.Threading.Tasks
@inject IDialogService DialogService
@inject APIService apiService
@inject HttpClient httpClient
@inject ThemeService ThemeService

<PageTitle>@($"Players for {Region} | Palaro 2026")</PageTitle>

<MudContainer MaxWidth="MaxWidth.Large">
    <MudGrid>
        <MudItem xs="12">
            <MudStack Row AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween">
                <MudStack Spacing="0">
                    <MudText Typo="Typo.h2">@Abbreviation</MudText>
                    <MudText Typo="Typo.subtitle1">@Region</MudText>
                </MudStack>
                <MudImage Src="@($"media/regions/{Abbreviation}.webp")" Height="100" />
            </MudStack>
        </MudItem>
        <MudItem xs="12">
            <MudBreadcrumbs Style="font-size: 15px" Class="pa-0" Items="_items"></MudBreadcrumbs>
            <MudDivider />
        </MudItem>
        <MudItem xs="12">
            <MudGrid>
                <MudVirtualize Items="_profilePlayers" Context="player">
                    <MudItem xs="6" md="4" lg="3">
                        <MudLink Underline="Underline.None" Href="@($"./regional-teams/{Abbreviation}-{Region}/players/{player.FirstName}-{player.LastName}")">
                            <MudPaper Class="scale-up-center" Style="height: 100%">
                                <MudStack Class="pa-3" Style="height: 100%" Spacing="2" Justify="Justify.SpaceBetween">
                                    <MudStack Spacing="0">
                                        <MudText Typo="Typo.body1" Style="line-height: 1"><b>@player.FirstName @player.LastName</b></MudText>
                                        <MudText Typo="Typo.caption">@player.Level</MudText>
                                        <MudText Typo="Typo.caption">@player.School, @player.Division</MudText>
                                    </MudStack>
                                    <MudDivider/>
                                    <MudStack Row Spacing="1" Wrap="Wrap.Wrap" AlignItems="AlignItems.Center">
                                        <MudImage ObjectFit="ObjectFit.Contain" Height="40" Src="@($"media/sports/icons/{(ThemeService.IsDarkMode == true ? "white" : "black")}/{player.Sport}.webp")" />
                                        <MudStack Spacing="0">
                                            <MudText Typo="Typo.caption"><b>@player.Sport</b></MudText>
                                            <MudText Typo="Typo.caption">(@player.Category)</MudText>
                                        </MudStack>
                                    </MudStack>
                                </MudStack>
                            </MudPaper>
                        </MudLink>
                    </MudItem>
                </MudVirtualize>
            </MudGrid>
        </MudItem>
    </MudGrid>
</MudContainer>
<FooterComponent />

@code {
    [Parameter]
    public string? Region { get; set; }
    [Parameter]
    public string? Abbreviation { get; set; }

    private List<BreadcrumbItem> _items = new();

    private List<ProfilesDTO.ProfilePlayersDetails.ProfilePlayers>? _profilePlayers;

    public class ProfilesDTO
    {
        public class ProfilePlayersDetails
        {
            public class ProfilePlayers
            {
                public int ID { get; set; }
                public string? FirstName { get; set; }
                public string? LastName { get; set; }
                public string? School { get; set; }
                public int? SchoolLevelID { get; set; }
                public string? Level { get; set; }
                public string? Division { get; set; }
                public int? RegionID { get; set; }
                public string? Region { get; set; }
                public string? Abbreviation { get; set; }
                public string? Category { get; set; }
                public int? SportID { get; set; }
                public string? Sport { get; set; }
                public List<ProfilePlayerSports>? ProfilePlayerSportsList { get; set; }
            }

            public class ProfilePlayerSports
            {
                public int ProfilePlayerSportID { get; set; }
                public string? Gender { get; set; }
                public string? Subcategory { get; set; }
                public List<ProfilePlayerSportCoaches>? ProfilePlayerSportCoachesList { get; set; }
            }

            public class ProfilePlayerSportCoaches
            {
                public string? CoachFirstName { get; set; }
                public string? CoachLastName { get; set; }
            }
        }

        public class ProfilePlayers
        {
            public int ID { get; set; }
            public string? FirstName { get; set; }
            public string? LastName { get; set; }
            public int? SchoolID { get; set; }
            public int? SportID { get; set; }
        }
    }

    // Initialization
    protected override async Task OnInitializedAsync()
    {
        ThemeService.OnThemeChanged += StateHasChanged;
        await ThemeService.LoadThemePreference();

        await GetPlayersProfileAsync();

        _items = new List<BreadcrumbItem>
        {
            new("Home", href: "./"),
            new("Regional Teams", href: "./regional-teams"),
            new($"{Region}", href: $"./regional-teams/{Abbreviation}-{Region}"),
            new("Players", href: null, disabled: true)
        };
    }

    private async Task GetPlayersProfileAsync()
    {
        string url = $"/Profiles/Player/Details?region={Region}";

        _profilePlayers = await apiService.GetAsync<ProfilesDTO.ProfilePlayersDetails.ProfilePlayers>(url);
    }
}
