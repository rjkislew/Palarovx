@page "/regional-teams"

@using System.Text.Json
@using System.Threading.Tasks
@using Client.Palaro2026.Services
@inject IJSRuntime JSRuntime
@inject APIService apiService
@inject HttpClient httpClient
@inject ThemeService ThemeService

<PageTitle>Regional teams | PALARO 2026 - Agusan del Sur</PageTitle>

<MudContainer MaxWidth="MaxWidth.Large">
    <MudGrid>
        <MudItem xs="12">
            <MudText Typo="Typo.h2">Regional Teams</MudText>
            <MudText Typo="Typo.subtitle1">Explore the participating regions and their teams.</MudText>
        </MudItem>
        <MudItem xs="12">
            <MudBreadcrumbs Style="font-size: 15px" Class="pa-0" Items="_items"></MudBreadcrumbs>
            <MudDivider />
        </MudItem>
        <MudItem xs="12" md="6">
            <MudLink Href="./medal-tally" Underline="Underline.None">
                <MudPaper Outlined Class="scale-up-center">
                    <MudStack Spacing="0" Class="pa-3">
                        <MudText Typo="Typo.h3">Medal Tally 🎖️</MudText>
                        <MudText>View the performance of each region.</MudText>
                        <MudText Typo="Typo.caption">This section displays the official medal tally of participating regions, helping you track gold, silver, and bronze standings in real-time.</MudText>
                    </MudStack>
                </MudPaper>
            </MudLink>
        </MudItem>
        <MudItem xs="12" md="6">
            <MudLink Href="./regional-teams/billeting-quarters" Underline="Underline.None">
                <MudPaper Outlined Class="scale-up-center">
                    <MudStack Spacing="0" Class="pa-3">
                        <MudText Typo="Typo.h3">Billeting Quarters 🏘️</MudText>
                        <MudText>Know where each delegation stays.</MudText>
                        <MudText Typo="Typo.caption">This section lists the billeting quarters assigned to each region, providing accommodation details for teams and officials.</MudText>
                    </MudStack>
                </MudPaper>
            </MudLink>
        </MudItem>

        <MudItem xs="12">
            <MudDivider />
        </MudItem>

        <MudItem xs="12">
            <MudGrid Justify="Justify.Center">
                @if (_schoolRegions?.Any() == true)
                {
                    <MudVirtualize Items="_schoolRegions" Context="region">
                        <MudItem xs="6" sm="4" lg="3" xl="2">
                            <MudLink Href="@($"./regional-teams/{region.Abbreviation}-{region.Region}")" Underline="Underline.None">
                                <MudPaper Outlined Style="height: 100%" Class="scale-up-center">
                                    <MudStack Class="pa-3" Style="height: 100%">
                                        <MudStack>
                                            <MudImage Src="@($"https://palarongpambansa2026.com/attachments/media/regions/team_logo/{region.Region}.webp")" />
                                            <MudImage Class="rounded-circle absolute" Style="@($"height: 50px; width: 50px;filter: drop-shadow(0 0 0.25rem {(ThemeService.IsDarkMode == true ? "black" : "white")});")" Src="@($"https://palarongpambansa2026.com/attachments/media/regions/region_logo/{region.Region}.webp")" />
                                        </MudStack>
                                        <MudStack Spacing="0">
                                            <MudText Align="Align.Center" Style="font-weight: bold">@region.Abbreviation</MudText>
                                            <MudText Align="Align.Center" Typo="Typo.caption">@region.Region</MudText>
                                        </MudStack>
                                    </MudStack>
                                </MudPaper>
                            </MudLink>
                        </MudItem>
                    </MudVirtualize>
                }
                else
                {
                    @for (int i = 0; i < 19; i++)
                    {
                        <MudItem xs="6" sm="4" lg="3" xl="2">
                            <MudPaper Outlined>
                                <MudStack Spacing="0">
                                    <MudSkeleton SkeletonType="SkeletonType.Rectangle" Height="150px" />
                                    <MudStack Class="pa-3 mt-n2" Spacing="0">
                                        <MudSkeleton Height="50px" />
                                        <MudSkeleton />
                                    </MudStack>
                                </MudStack>
                            </MudPaper>
                        </MudItem>
                    }
                }
            </MudGrid>
        </MudItem>
    </MudGrid>
</MudContainer>

<FooterComponent />
@code {
    /* ---------------------------
       Variables

       - manages and stores and data coming from API calls

    --------------------------- */

    // storage for regions data from API call
    private List<SchoolsDTO.SchoolRegions>? _schoolRegions;

    // Breadcrumb items
    private List<BreadcrumbItem> _items = new();

    /* ---------------------------
        Lifecycle Methods

        - methods that manage the component's lifecycle and state

    --------------------------- */

    // Initialize component and load initial data
    protected override async Task OnInitializedAsync()
    {
        // subscribe to theme changes
        ThemeService.OnThemeChanged += StateHasChanged;
        await ThemeService.LoadThemePreference();

        // Fetch regions data
        await GetRegionsAsync();

        // Setup breadcrumb items
        _items = new List<BreadcrumbItem>
        {
            new("Home", href: "./"),
            new("Regional Teams", href: null, disabled: true)
        };
    }

    /* ---------------------------
       API Calls

       - methods for fetching data from APIs

    --------------------------- */

    // Fetch regions data from the API
    private async Task GetRegionsAsync()
    {
        string url = "/Schools/Regions";
        _schoolRegions = await apiService.GetAsync<SchoolsDTO.SchoolRegions>(url);
    }

    /* ---------------------------
       DTO Classes

       - Data Transfer Objects for handling API responses
       Note: Please refer to the API documentation for more details.

    --------------------------- */

    // DTO for regions
    public class SchoolsDTO
    {
        public class SchoolRegions
        {
            public int ID { get; set; }
            public string? Region { get; set; }
            public string? Abbreviation { get; set; }
        }
    }
}

