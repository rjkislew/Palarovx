@page "/regional-teams"

@using System.Text.Json
@using System.Threading.Tasks
@using Client.Palaro2026.Services
@inject IJSRuntime JSRuntime
@inject APIService apiService
@inject HttpClient httpClient
@inject FeaturesUnlockingService featuresUnlockingService

<PageTitle>Regional teams | PALARO 2026 - Agusan del Sur</PageTitle>

<MudContainer MaxWidth="MaxWidth.Large">
    <MudGrid>
        <MudItem xs="12">
            <MudText Typo="Typo.h2">Regional Teams</MudText>
            <MudText Typo="Typo.subtitle1">Explore the participating regions and their teams.</MudText>
        </MudItem>
        <MudItem xs="12">
            <MudBreadcrumbs Style="font-size: 15px" Class="pa-0" Items="_items"></MudBreadcrumbs>
            <MudDivider />
        </MudItem>
        @if (featuresUnlockingService.IsUnlocked == true)
        {
            <MudItem xs="12" md="6">
                <MudLink Href="./events/medal-tally" Underline="Underline.None">
                    <MudPaper Outlined Class="scale-up-center">
                        <MudStack Spacing="0" Class="pa-3">
                            <MudText Typo="Typo.h3">Medal Tally 🎖️</MudText>
                            <MudText>View the performance of each region.</MudText>
                            <MudText Typo="Typo.caption">This section displays the official medal tally of participating regions, helping you track gold, silver, and bronze standings in real-time.</MudText>
                        </MudStack>
                    </MudPaper>
                </MudLink>
            </MudItem>
        }
        <MudItem xs="12" md="6">
            <MudLink Href="./regional-teams/billeting-quarters" Underline="Underline.None">
                <MudPaper Outlined Class="scale-up-center">
                    <MudStack Spacing="0" Class="pa-3">
                        <MudText Typo="Typo.h3">Billeting Quarters 🏘️</MudText>
                        <MudText>Know where each delegation stays.</MudText>
                        <MudText Typo="Typo.caption">This section lists the billeting quarters assigned to each region, providing accommodation details for teams and officials.</MudText>
                    </MudStack>
                </MudPaper>
            </MudLink>
        </MudItem>

        <MudItem xs="12">
            <MudDivider />
        </MudItem>

        @if (apiService.NoData == false)
        {
            <MudItem xs="12">
                <MudGrid Justify="Justify.Center">
                    <MudVirtualize Items="_schoolRegions" Context="region">
                        <MudItem xs="6" sm="4" lg="3" xl="2">
                            <MudLink Href="@(featuresUnlockingService.IsUnlocked == true ? $"./regional-teams/{region.Abbreviation}-{region.Region}" : null)" Underline="Underline.None">
                                <MudPaper Outlined Style="height: 100%" Class="scale-up-center">
                                    <MudStack Class="pa-3" Style="height: 100%">
                                        <MudImage Src="@($"media/regions/{region.Abbreviation}.webp")" />
                                        <MudStack Spacing="0">
                                            <MudText Align="Align.Center" Style="font-weight: bold">@region.Abbreviation</MudText>
                                            <MudText Align="Align.Center" Typo="Typo.caption">@region.Region</MudText>
                                        </MudStack>
                                    </MudStack>
                                </MudPaper>
                            </MudLink>
                        </MudItem>
                    </MudVirtualize>
                </MudGrid>
            </MudItem>
        }
        else
        {
            <MudProgressLinear/>
        }
    </MudGrid>
</MudContainer>
<FooterComponent />
@code {
    private List<BreadcrumbItem> _items = new();

    private List<SchoolsDTO.SchoolRegions>? _schoolRegions;

    public class SchoolsDTO
    {
        public class SchoolRegions
        {
            public int ID { get; set; }
            public string? Region { get; set; }
            public string? Abbreviation { get; set; }
        }
    }

    // Initialization method to fetch data and update UI elements
    protected override async Task OnInitializedAsync()
    {
        featuresUnlockingService.OnLockChanged += StateHasChanged;
        await featuresUnlockingService.LoadFromLocalStorageAsync();
        await GetRegionsAsync();

        _items = new List<BreadcrumbItem>
        {
            new("Home", href: "./"),
            new("Regional Teams",  href: null, disabled: true)
        };
    }

    private async Task GetRegionsAsync()
    {
        string url = "/Schools/Regions";
        _schoolRegions = await apiService.GetAsync<SchoolsDTO.SchoolRegions>(url);
    }
}
