@page "/"
@inject IJSRuntime JSRuntime



<MudGrid Spacing="20">
    <MudItem xs="12">
        <MudGrid Spacing="20">
            <MudItem xs="12">
                <MudStack Spacing="0">
                    <MudText Typo="Typo.h1" Color="Color.Primary">Palarong Pambansa</MudText>
                    <MudStack Row AlignItems="AlignItems.End" Spacing="0">
                        <MudText Typo="Typo.h3" HtmlTag="h2" Color="Color.Primary">Agusan del Sur 2026 | </MudText>
                        <MudText>@days d : @hours d : @min m : @sec s</MudText>
                    </MudStack>
                </MudStack>
            </MudItem>
            <MudItem xs="12">
                <SportsCardComponent />
            </MudItem>
            <MudItem xs="12">
                <MudGrid>
                    <MudItem xs="12" md="6">
                        <MudPaper Height="250px" Class="pa-0 relative mud-border-primary" Outlined>
                            <MudText Typo="Typo.h2" Color="Color.Primary" Class="absolute pa-5" Style="left: 0; bottom: 0">
                                Tourism
                            </MudText>
                        </MudPaper>
                    </MudItem>
                    <MudItem xs="12" md="6">
                        <MudPaper Height="250px" Class="pa-0 relative mud-border-primary" Outlined>
                            <MudText Typo="Typo.h2" Color="Color.Primary" Class="absolute pa-5" Style="left: 0; bottom: 0">
                                Accommodation
                            </MudText>
                        </MudPaper>
                    </MudItem>
                </MudGrid>
            </MudItem>
            <MudItem xs="12">
                <SponsorsComponent />
            </MudItem>
        </MudGrid>
    </MudItem>
    <MudItem xs="12">
        <FooterComponent />
    </MudItem>
</MudGrid>
@code {
    private string eventStarted = string.Empty;
    private string days = string.Empty;
    private string hours = string.Empty;
    private string min = string.Empty;
    private string sec = string.Empty;
    private DateTime targetDate = new DateTime(2026, 7, 10, 0, 0, 0);
    private Timer? timer;


    protected override void OnInitialized()
    {
        StartCountdown();
    }

    private void StartCountdown()
    {
        // Set up a timer to trigger every second
        timer = new Timer(UpdateCountdown, null, 0, 1000);
    }

    private void UpdateCountdown(object state)
    {
        var timeLeft = targetDate - DateTime.Now;

        if (timeLeft.TotalSeconds > 0)
        {

            days = String.Format($"{timeLeft.Days}");
            hours = String.Format($"{timeLeft.Hours}");
            min = String.Format($"{timeLeft.Minutes}");
            sec = String.Format($"{timeLeft.Seconds}");
        }
        else
        {
            eventStarted = "The event has started!";
            timer?.Dispose(); // Stop the timer when the countdown is over
        }

        InvokeAsync(StateHasChanged); // Ensure UI is updated
    }

    public void Dispose()
    {
        timer?.Dispose(); // Clean up the timer when the component is disposed
    }
}

