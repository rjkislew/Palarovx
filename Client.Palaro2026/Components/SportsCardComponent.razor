<MudStack Row Class="flex-nowrap overflow-auto py-1 smooth-scroll no-scrollbar" Spacing="5">
    <MudVirtualize Items="sports" Context="sportData">
        <MudPaper Elevation="0" Class="flex-none pa-3 align-content-end relative"
                  Style="@($"background-image: url('{GetBackgroundImageUrl(sportData)}'); background-size: cover; background-position: center; overflow: hidden")" Width="350px">
            <MudStack Style="position: absolute;
                             top: 0;
                             left: 0;
                             width: 100%;
                             height: 100%;
                             background-color: rgba(0, 0, 0, 0.75);z-index: 0" Class="rounded">
            </MudStack>
            <MudStack Row>
                <MudText Color="Color.Secondary" Style="writing-mode: vertical-lr; font-family: 'New Amsterdam'; font-size: 100px; margin-left: -40px; margin-right: -40px; z-index: 1;">
                    @sportData.Sport
                </MudText>
                <MudDivider Vertical FlexItem Style="z-index: 1" />
                <MudStack Justify="Justify.FlexEnd" Spacing="0">
                    <MudStack Spacing="0" Style="z-index: 1">
                        <MudText Color="Color.Secondary" Style="font-size: 20px">Live Now</MudText>
                        <MudStack Row>
                            <MudButton Class="rounded-pill" Variant="Variant.Filled" Style="color: black" EndIcon="@Icons.Material.Filled.Circle" IconColor="Color.Error" Color="Color.Secondary">
                                @sportData.LiveNow
                            </MudButton>
                        </MudStack>
                    </MudStack>
                    <MudStack Spacing="0" Style="z-index: 1" Class="pt-5">
                        <MudText Color="Color.Secondary" Style="font-size: 20px">Upcoming</MudText>
                        <MudStack Row>
                            <MudButton Class="rounded-pill" Variant="Variant.Filled" Style="color: black" Color="Color.Secondary">
                                @sportData.Upcoming
                            </MudButton>
                        </MudStack>
                    </MudStack>
                </MudStack>
            </MudStack>
        </MudPaper>
    </MudVirtualize>
</MudStack>

<MudStack Row Justify="Justify.Center" AlignItems="AlignItems.Center" Spacing="0">
    <MudText Typo="Typo.body2">
    Scroll for more</MudText>
    <MudIcon Icon="@Icons.Material.Filled.ArrowRightAlt" />
</MudStack>

@code {
    private string GetBackgroundImageUrl(SportData sportData)
    {
        return $"Media/Sports/{sportData.Sport}.jpg";
    }

    private List<SportData> sports = new()
    {
        new SportData("Basketball", "Region XIII vs NCR", "BARMM vs Region 1"),
        new SportData("Baseball", "Region XIII vs NCR", "BARMM vs Region 2"),
        new SportData("Taekwondo", "Region XIII vs NCR", "BARMM vs Region 3"),
        new SportData("Badminton", "Region XIII vs NCR", "BARMM vs Region 4"),
        new SportData("Volleyball", "Region XIII vs NCR", "BARMM vs Region 5"),
        new SportData("Gymnastics", "Region XIII vs NCR", "BARMM vs Region 6"),
        new SportData("Arnis", "Region XIII vs NCR", "BARMM vs Region 7"),
        new SportData("Athletics", "Region XIII vs NCR", "BARMM vs Region 8"),
        new SportData("Football", "Region XIII vs NCR", "BARMM vs Region 9"),
        new SportData("Takraw", "Region XIII vs NCR", "BARMM vs Region 10"),
        new SportData("Swimming", "Region XIII vs NCR", "BARMM vs Region 11"),
        new SportData("Wrestling", "Region XIII vs NCR", "BARMM vs Region 12"),
        new SportData("Throwing", "Region XIII vs NCR", "BARMM vs Region 13"),
    };

    private class SportData
    {
        public string Sport { get; set; }
        public string LiveNow { get; set; }
        public string Upcoming { get; set; }

        public SportData(string sport, string liveNow, string upcoming)
        {
            Sport = sport;
            LiveNow = liveNow;
            Upcoming = upcoming;
        }
    }
}
