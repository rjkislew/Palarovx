// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable enable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Server.Palaro2026.Entities;

namespace Server.Palaro2026.Context;

public partial class Palaro2026Context : DbContext
{
    public Palaro2026Context(DbContextOptions<Palaro2026Context> options)
        : base(options)
    {
    }

    public virtual DbSet<BilletingQuarters> BilletingQuarters { get; set; }

    public virtual DbSet<BilletingQuartersDetails> BilletingQuartersDetails { get; set; }

    public virtual DbSet<Divisions> Divisions { get; set; }

    public virtual DbSet<EventDetails> EventDetails { get; set; }

    public virtual DbSet<EventVersus> EventVersus { get; set; }

    public virtual DbSet<Events> Events { get; set; }

    public virtual DbSet<GenderCategories> GenderCategories { get; set; }

    public virtual DbSet<News> News { get; set; }

    public virtual DbSet<PlayerProfileDetails> PlayerProfileDetails { get; set; }

    public virtual DbSet<PlayerProfiles> PlayerProfiles { get; set; }

    public virtual DbSet<Regions> Regions { get; set; }

    public virtual DbSet<SchoolDetails> SchoolDetails { get; set; }

    public virtual DbSet<SchoolLevels> SchoolLevels { get; set; }

    public virtual DbSet<Schools> Schools { get; set; }

    public virtual DbSet<SessionDetails> SessionDetails { get; set; }

    public virtual DbSet<SportCategories> SportCategories { get; set; }

    public virtual DbSet<SportDetails> SportDetails { get; set; }

    public virtual DbSet<SportSubCategories> SportSubCategories { get; set; }

    public virtual DbSet<Sports> Sports { get; set; }

    public virtual DbSet<TeamCoaches> TeamCoaches { get; set; }

    public virtual DbSet<UserRoles> UserRoles { get; set; }

    public virtual DbSet<Users> Users { get; set; }

    public virtual DbSet<UsersDetails> UsersDetails { get; set; }

    public virtual DbSet<Venues> Venues { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<BilletingQuarters>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__billetin__3213E83F62A22D2C");

            entity.Property(e => e.Address)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.BilletingQuarter)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ContactPerson)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ContactPersonNumber)
                .HasMaxLength(12)
                .IsUnicode(false);
            entity.Property(e => e.Latitude).HasColumnType("decimal(8, 6)");
            entity.Property(e => e.Longitude).HasColumnType("decimal(9, 6)");

            entity.HasOne(d => d.Region).WithMany(p => p.BilletingQuarters)
                .HasForeignKey(d => d.RegionID)
                .HasConstraintName("FK__billeting__regio__5DCAEF64");
        });

        modelBuilder.Entity<BilletingQuartersDetails>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("BilletingQuartersDetails");

            entity.Property(e => e.Abbreviation)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.Address)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.BilletingQuarter)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ContactPerson)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ContactPersonNumber)
                .HasMaxLength(12)
                .IsUnicode(false);
            entity.Property(e => e.Latitude).HasColumnType("decimal(8, 6)");
            entity.Property(e => e.Longitude).HasColumnType("decimal(9, 6)");
            entity.Property(e => e.Region)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Divisions>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__Division__3214EC27AA22701B");

            entity.Property(e => e.ID).ValueGeneratedNever();
            entity.Property(e => e.Division)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.Region).WithMany(p => p.Divisions)
                .HasForeignKey(d => d.RegionID)
                .HasConstraintName("FK__Divisions__Regio__5535A963");
        });

        modelBuilder.Entity<EventDetails>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("EventDetails");

            entity.Property(e => e.Abbreviation)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.Category)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Date).HasColumnType("datetime");
            entity.Property(e => e.EventTitle).IsUnicode(false);
            entity.Property(e => e.Gender)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Level)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Region)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Sport)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.StreamURL).IsUnicode(false);
            entity.Property(e => e.SubCategory)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Venue)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<EventVersus>(entity =>
        {
            entity.HasOne(d => d.Event).WithMany(p => p.EventVersus)
                .HasForeignKey(d => d.EventID)
                .HasConstraintName("FK_Versus_Events");

            entity.HasOne(d => d.Region).WithMany(p => p.EventVersus)
                .HasForeignKey(d => d.RegionID)
                .HasConstraintName("FK_Versus_RegionalTeams");
        });

        modelBuilder.Entity<Events>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__events__3213E83F7F467A0E");

            entity.Property(e => e.Date).HasColumnType("datetime");
            entity.Property(e => e.EventTitle).IsUnicode(false);
            entity.Property(e => e.StreamURL).IsUnicode(false);

            entity.HasOne(d => d.SportSubCategory).WithMany(p => p.Events)
                .HasForeignKey(d => d.SportSubCategoryID)
                .HasConstraintName("FK_events_sport_sub_categories");

            entity.HasOne(d => d.Venue).WithMany(p => p.Events)
                .HasForeignKey(d => d.VenueID)
                .HasConstraintName("FK__events__venue_id__571DF1D5");
        });

        modelBuilder.Entity<GenderCategories>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__GenderCa__3214EC273BE4306C");

            entity.Property(e => e.ID).ValueGeneratedNever();
            entity.Property(e => e.Gender)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<News>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__News__3214EC27B5C04219");

            entity.Property(e => e.ID).ValueGeneratedNever();
            entity.Property(e => e.FacebookLink).IsUnicode(false);
        });

        modelBuilder.Entity<PlayerProfileDetails>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("PlayerProfileDetails");

            entity.Property(e => e.Abbreviation)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.Category)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Description).IsUnicode(false);
            entity.Property(e => e.Division)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.FirstName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Gender)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.LastName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Level)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Region)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.School)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Sport)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.SubCategory)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<PlayerProfiles>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__PlayerPr__3214EC2796F36333");

            entity.Property(e => e.ID).ValueGeneratedNever();
            entity.Property(e => e.FirstName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.LastName)
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasOne(d => d.School).WithMany(p => p.PlayerProfiles)
                .HasForeignKey(d => d.SchoolID)
                .HasConstraintName("FK__PlayerPro__Schoo__59FA5E80");

            entity.HasOne(d => d.SportSubCategory).WithMany(p => p.PlayerProfiles)
                .HasForeignKey(d => d.SportSubCategoryID)
                .HasConstraintName("FK__player_pr__sport__5CD6CB2B");
        });

        modelBuilder.Entity<Regions>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__Regional__3214EC27FFF642E1");

            entity.Property(e => e.ID).ValueGeneratedNever();
            entity.Property(e => e.Abbreviation)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.Region)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<SchoolDetails>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("SchoolDetails");

            entity.Property(e => e.Abbreviation)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.Division)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Region)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.School)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<SchoolLevels>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__Levels__3214EC27EAD37397");

            entity.Property(e => e.ID).ValueGeneratedNever();
            entity.Property(e => e.Level)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Schools>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__Schools__3214EC27215C1750");

            entity.Property(e => e.ID).ValueGeneratedNever();
            entity.Property(e => e.School)
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasOne(d => d.Division).WithMany(p => p.Schools)
                .HasForeignKey(d => d.DivisionID)
                .HasConstraintName("FK__Schools__Divisio__5BE2A6F2");
        });

        modelBuilder.Entity<SessionDetails>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("SessionDetails");

            entity.Property(e => e.ID)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.RecentIP)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.SessionID)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<SportCategories>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__SportCat__3214EC274517CC87");

            entity.Property(e => e.ID).ValueGeneratedNever();
            entity.Property(e => e.Category)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<SportDetails>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("SportDetails");

            entity.Property(e => e.Category)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Description).IsUnicode(false);
            entity.Property(e => e.Gender)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Level)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Sport)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.SubCategory)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<SportSubCategories>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__sport_su__3213E83F92479A7A");

            entity.Property(e => e.ID).ValueGeneratedNever();
            entity.Property(e => e.SubCategory)
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasOne(d => d.GenderCategory).WithMany(p => p.SportSubCategories)
                .HasForeignKey(d => d.GenderCategoryID)
                .HasConstraintName("FK__sport_sub__gende__52593CB8");

            entity.HasOne(d => d.SchoolLevel).WithMany(p => p.SportSubCategories)
                .HasForeignKey(d => d.SchoolLevelID)
                .HasConstraintName("FK_SportSubCategory_SchoolLevel");

            entity.HasOne(d => d.Sport).WithMany(p => p.SportSubCategories)
                .HasForeignKey(d => d.SportID)
                .HasConstraintName("FK__sport_sub__sport__5165187F");
        });

        modelBuilder.Entity<Sports>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__sports__3213E83FE4966238");

            entity.Property(e => e.ID).ValueGeneratedNever();
            entity.Property(e => e.Description).IsUnicode(false);
            entity.Property(e => e.Sport)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.SportCategory).WithMany(p => p.Sports)
                .HasForeignKey(d => d.SportCategoryID)
                .HasConstraintName("FK__sports__sports_c__5070F446");
        });

        modelBuilder.Entity<TeamCoaches>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__TeamCoac__3214EC27C880573E");

            entity.Property(e => e.ID).ValueGeneratedNever();
            entity.Property(e => e.FirstName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.LastName)
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasOne(d => d.Region).WithMany(p => p.TeamCoaches)
                .HasForeignKey(d => d.RegionID)
                .HasConstraintName("FK__TeamCoach__Regio__60A75C0F");

            entity.HasOne(d => d.SportSubCategory).WithMany(p => p.TeamCoaches)
                .HasForeignKey(d => d.SportSubCategoryID)
                .HasConstraintName("FK__team_coac__sport__59063A47");
        });

        modelBuilder.Entity<UserRoles>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK_roles");

            entity.Property(e => e.ID).ValueGeneratedNever();
            entity.Property(e => e.Description).IsUnicode(false);
            entity.Property(e => e.Role)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Users>(entity =>
        {
            entity.Property(e => e.ID)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.CreatedAt).HasColumnType("datetime");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.FirstName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.LastLogin).HasColumnType("datetime");
            entity.Property(e => e.LastName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PasswordHash).IsUnicode(false);
            entity.Property(e => e.RecentIP)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.SessionID)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.UpdateAt).HasColumnType("datetime");
            entity.Property(e => e.Username)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.Role).WithMany(p => p.Users)
                .HasForeignKey(d => d.RoleID)
                .HasConstraintName("FK_users_roles");
        });

        modelBuilder.Entity<UsersDetails>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("UsersDetails");

            entity.Property(e => e.CreatedAt).HasColumnType("datetime");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.FirstName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.ID)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.LastLogin).HasColumnType("datetime");
            entity.Property(e => e.LastName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PasswordHash).IsUnicode(false);
            entity.Property(e => e.Role)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.UpdateAt).HasColumnType("datetime");
            entity.Property(e => e.Username)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Venues>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__Venues__3214EC2738289954");

            entity.Property(e => e.ID).ValueGeneratedNever();
            entity.Property(e => e.Latitude).HasColumnType("decimal(8, 6)");
            entity.Property(e => e.Longitude).HasColumnType("decimal(9, 6)");
            entity.Property(e => e.Venue)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}